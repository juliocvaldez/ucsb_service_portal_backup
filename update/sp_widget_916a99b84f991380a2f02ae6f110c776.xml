<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function ($scope, spUtil, $rootScope, $location, $timeout, $sce) {
	// Legend popover content
	$scope.htmlPopover = $sce.trustAsHtml('<i class="fa fa-fw fa-folder text-'+$scope.options.subcategory_icon_color+'"/>&nbsp;Subcategories<br />' + 
																				'<i class="fa fa-fw fa-file-text text-'+$scope.options.cat_item_icon_color+'"/>&nbsp;Catalog items');
	// Sorting functionality
	$scope.nameCaret = 'caret-right';
	$scope.countCaret = 'caret-right';
	$scope.propertyName = 'order';
	$scope.reverse = undefined;
	$scope.sortBy = function(propertyName) {
		$scope.reverse = ($scope.propertyName === propertyName) ? !$scope.reverse : false;
		$scope.propertyName = propertyName;
		setCaret($scope.reverse, $scope.propertyName);
	};	
	function setCaret(rev, prop) {
		if (prop !== 'name')
			$scope.nameCaret = 'caret-right';
		if (prop === 'name' && !rev && rev !== undefined)
			$scope.nameCaret = 'caret-up';
		if (prop === 'name' && rev)
			$scope.nameCaret = 'caret-down';
		if (prop !== 'count')
			$scope.countCaret = 'caret-right';
		if (prop === 'count' && !rev && rev !== undefined)
			$scope.countCaret = 'caret-up';
		if (prop === 'count' && rev)
			$scope.countCaret = 'caret-down';	
	}
	
	// Breadcrumbs
	var bc = [{label: $scope.page.title, url: '?id=' + $scope.data.sc_catalog_page}];
	if ($scope.data.parent)
		bc[bc.length] = {
			label: $scope.data.parent, 
			url: '?id=' + $scope.data.sc_category_page + '&sys_id=' + $scope.data.parent_id
		};
	if ($scope.data.category)
		bc[bc.length] = {label: $scope.data.category, url: '#'};

	$timeout(function() {
		$rootScope.$broadcast('sp.update.breadcrumbs', bc);
	});
	spUtil.setSearchPage('sc');

	/*=============== Begin link handling ===============*/
	$scope.onClick = function($event, item) {
		var lp = getLinkParts(item);
		if (typeof lp == "string")
			return; // can't intercept/redirect external content item

		$event.stopPropagation();
		$event.preventDefault();
		var evt = {item: item, search: lp};

		// This will let a wrapper widget intercept and redirect somewhere else
		$scope.$emit($scope.options.click_event_name, evt);
	};

	function getLinkParts(item) {
		if (item.sys_class_name == 'sc_cat_item_content' && item.content_type == 'external')
			return item.url;

		return {id: item.page, sys_id: item.sys_id};
	}

	$scope.getItemHREF = function(item) {
		var lp = getLinkParts(item);
		if (typeof lp == "string")
			return lp;

		return "?id=" + lp.id + "&sys_id=" + lp.sys_id;
	};

	var unregister = $rootScope.$on($scope.options.click_event_name, function($event, o) {
		if ("url" in o)
			$location.href = o.url;
		else
			$location.search(o.search);
	});

	$scope.$on("$destroy", function() {
		unregister();
	});
	/*=============== End link handling ===============*/
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.title-container {
  margin-bottom: 10px;
}

.title {
  display: unset;
}

.sort {
  margin-right: 20px;
}

.name {
  min-width: 65px;
}

.count {
  min-width: 125px;
}

.popover {
  min-width: fit-content;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>ucsb-sc-category-page</id>
        <internal>false</internal>
        <link/>
        <name>UCSB SC Category Page</name>
        <option_schema>[{"name":"click_event_name","default_value":"$sp.cat_item_list.click","label":"Click event name","type":"string"},{"displayValue":"Page","name":"sc_cat_item_page","label":"SC Catalog Item Page","type":"reference","value":"sp_page","ed":{"reference":"sp_page"}},{"name":"subcategory_icon_color","default_value":"default","label":"Subcategory Icon Color","type":"choice","choices":[{"label":"default","value":"default"},{"label":"primary","value":"primary"},{"label":"success","value":"success"},{"label":"info","value":"info"},{"label":"warning","value":"warning"},{"label":"danger","value":"danger"}]},{"name":"cat_item_icon_color","default_value":"default","label":"Cat Item Icon Color","type":"choice","choices":[{"label":"default","value":"default"},{"label":"primary","value":"primary"},{"label":"success","value":"success"},{"label":"info","value":"info"},{"label":"warning","value":"warning"},{"label":"danger","value":"danger"}]},{"name":"cat_item_subfield","default_value":"","label":"Catalog Item Subfield","type":"choice","choices":[{"label":"Description","value":"Description"},{"label":"Short Description","value":"Short Description"}]}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	// set cat item page option
	var params = JSON.parse($sp.getDisplayValue('widget_parameters'));
	options.sc_cat_item_page = params.sc_cat_item_page.displayValue || 'sc_cat_item';
	
	// set catalog and category id
	data.sc_catalog = $sp.getValue('sc_catalogs') || $sp.getValue('sc_catalog');
	data.category_id = $sp.getParameter('sys_id');

	// set page and price options
	data.showPrices = $sp.showCatalogPrices();
	data.sc_catalog_page = $sp.getDisplayValue("sc_catalog_page") || "sc_home";
	data.sc_category_page = $sp.getDisplayValue("sc_category_page") || "sc_category";

	if (options && options.sys_id)
		data.category_id = options.sys_id;
	if (!data.category_id) {
		data.error = gs.getMessage("No category specified");
		return;
	}

	// does user have permission to see this category?
	var categoryId = '' + data.category_id;
	var categoryJS = new sn_sc.CatCategory(categoryId);
	if (!categoryJS.canView()) {
		data.error = gs.getMessage("You do not have permission to see this category");
		return;
	}

	// if so, set title
	data.category = categoryJS.getTitle();

	// set parent category if one exists
	data.parent_id = categoryJS.getParent();
	if (data.parent_id) {
		var gr = new GlideRecord('sc_category');
		if (gr.get(data.parent_id)) {
			data.parent = gr.getDisplayValue();
		}
	}

	// gather related subcategories
	var subcategories = data.subcategories = [];
	var subcategoryIds = new GlideRecord('sc_category');
	subcategoryIds.addActiveQuery();
	subcategoryIds.addQuery('parent.sys_id', categoryId);
	subcategoryIds.query();
	while(subcategoryIds.next()){
		var subcategoryJS = new sn_sc.CatCategory(subcategoryIds.getUniqueValue());
		if (!subcategoryJS.canView())
			continue;
		var subcategory = {};
		subcategory.count = 0;
		subcategory.name = subcategoryIds.getValue('title');
		subcategory.description = subcategoryIds.getValue('description');
		subcategory.sys_id = subcategoryIds.getUniqueValue();
		subcategory.order = Number(subcategoryIds.getValue('order'));
		subcategory.page = data.sc_category_page;
		subcategories.push(subcategory);
	}


	// gather related catalog items
	var categoryItemIds = categoryJS.getItemIds();
	var items = data.items = [];
	for (var i = 0; i < categoryItemIds.length; i++) {
		var catalogItemJS = new sn_sc.CatItem(categoryItemIds[i]);
		if (!catalogItemJS.canView(gs.isMobile()))
			continue;
		var catItemDetails = catalogItemJS.getItemSummary();
		if (catItemDetails.type == 'wizard_item')
			continue;
		var item = {};
		item.count = 0;
		item.name = catItemDetails.name;
		item.description = options.cat_item_subfield == 'Description' ? catItemDetails.description : catItemDetails.short_description;
		item.picture = catItemDetails.picture;
		item.price = catItemDetails.price;
		item.sys_id = catItemDetails.sys_id;
		item.hasPrice = catItemDetails.show_price;
		item.page = options.sc_cat_item_page;
		item.type = catItemDetails.type;
		item.order = catItemDetails.order;
		item.sys_class_name = catItemDetails.sys_class_name;
		if (item.type == 'order_guide') {
			item.page = 'sc_cat_item_guide';
		} else if (item.type == 'content_item') {
			item.content_type = catItemDetails.content_type;
			item.url = catItemDetails.url;
			if (item.content_type == 'kb') {
				item.kb_article = catItemDetails.kb_article;
				item.page = 'kb_article';
				item.sys_id = item.kb_article;
			} else if (item.content_type == 'external') {
				item.target = '_blank';
			}
		}
		items.push(item);
	}

	// query for aggregate count
	var count = new GlideAggregate('sc_req_item');
	count.addAggregate('COUNT','cat_item');
	count.groupBy('cat_item');
	count.addQuery('cat_item.sys_class_name', 'NOT IN', 'sc_cat_item_guide,sc_cat_item_wizard,sc_cat_item_content');
	count.addQuery('cat_item.sc_catalogs', 'IN', data.sc_catalog);
	count.query();
	while(count.next()) {
		// parse through cat items and add count
		items.forEach(function(item) {
			if(count.cat_item.sys_id.getDisplayValue() == item.sys_id)
				item.count = parseInt(count.getAggregate('COUNT', 'cat_item'));
		});
		// parse throught subcategories and add counts
		subcategories.forEach(function(subcategory) {
			if(count.cat_item.category.sys_id.getDisplayValue() == subcategory.sys_id ||
				 count.cat_item.category.parent.sys_id.getDisplayValue() == subcategory.sys_id)
				subcategory.count += parseInt(count.getAggregate('COUNT', 'cat_item'));
		});
	}
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>julio.valdez_admin</sys_created_by>
        <sys_created_on>2018-04-03 16:13:52</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>916a99b84f991380a2f02ae6f110c776</sys_id>
        <sys_mod_count>265</sys_mod_count>
        <sys_name>UCSB SC Category Page</sys_name>
        <sys_package display_value="UCSB Service Portal" source="x_68580_ucsb_sp">44bb3f670f1013003fd44cace1050e00</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="UCSB Service Portal">44bb3f670f1013003fd44cace1050e00</sys_scope>
        <sys_update_name>sp_widget_916a99b84f991380a2f02ae6f110c776</sys_update_name>
        <sys_updated_by>julio.valdez_admin</sys_updated_by>
        <sys_updated_on>2018-05-21 22:44:29</sys_updated_on>
        <template><![CDATA[<div>
  <h4 ng-if="data.error">{{data.error}}</h4>
  <div ng-init="spSearch.targetCatalog()">
    <div class="title-container">
      <div class="row">
          <div class="col-md-12">
          <h1 class="h4 m-t-none title" aria-label="{{data.category}} ${Category}">{{data.category}}</h1>
          <div ng-if="data.subcategories.length || data.items.length" class="text-muted pull-right">
            <button type="button" class="btn btn-sm sort name" ng-click="sortBy('name')">
              A - Z&nbsp;<fa name="{{nameCaret}}"/></button>
            <button type="button" class="btn btn-sm sort count" ng-click="sortBy('count')">
              Most Popular&nbsp;<fa name="{{countCaret}}"/></button>
            <button 
                    popover-placement="bottom"
                    popover-animation="true"
                    uib-popover-html="htmlPopover"
                    type="button"
                    class="btn btn-sm">
              Legend</button>
          </div>
        </div>
      </div>
    </div>

    <div class="row">
      <!-- CASE: No subcategories or items found -->
      <div class="col-sm-6 col-md-4" ng-if="!data.subcategories.length && !data.items.length && !data.error">
        ${No items in category}
      </div>

      <!-- CASE: Subcategories exist -->
      <div ng-if="data.subcategories.length"  ng-include="'subcat-template'"/>

      <!-- CASE: Items exist -->
      <div ng-if="data.items.length"  ng-include="'item-template'"/>
    </div>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
