<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function($scope, $http, $timeout) {
	$scope.expandedCategory = ($scope.expandedCategory ? $scope.expandedCategory : null);

	var getCatalogCategories = "/api/sn_sc/servicecatalog/catalogs/" + $scope.data.sc_catalog + "/categories?sysparm_top_level_only=" + ($scope.options.category_layout === "Nested") + "&sysparm_check_item_can_view=" + $scope.options.check_can_view + "&sysparm_limit=-1&sysparm_dynamic_category=false";
	$http({method: 'GET', url: getCatalogCategories}).
	then(function(response) {
		$scope.data.categories = response.data.result;

		$scope.server.get({
			action: "retrieve_parent_hierarchy",
			cur_category_id : $scope.data.selected_category_id,
			categories : $scope.data.categories
		}).then(function(response) {
			$scope.data.categories = response.data.categories;
			$scope.expandedCategory = $scope.data.categories.find(function(element) {
				return element.showSubcategories == true;
			});
		});

	}, function(response) {
		console.log(response.data.error.message);
	});

	$scope.$on("$sp.sc_category.retrieve_subcategories", function(evt, category) {
		var specificCategoryDetails = "/api/sn_sc/servicecatalog/categories/" + category.sys_id + "?sysparm_check_item_can_view=" + $scope.options.check_can_view;

		if ($scope.expandedCategory && $scope.expandedCategory.sys_id != category.sys_id)
			$scope.expandedCategory.showSubcategories = !$scope.expandedCategory.showSubcategories;

		if (!category.subcategories || !category.subcategories[0].count) {
			$http({method: 'GET', url: specificCategoryDetails}).
			then(function(response) {
				category.subcategories = response.data.result.child_categories;
			}, function(response) {
				console.log(response.data.error.message);
			});
		}

		$scope.expandedCategory = category;

	});
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.list-group-item {
  .fa-fw {
    margin-right: 5px;
  }
}

.indent-category {
  margin-left: 25px;
}

.selected {
  color: $primary !important;
  background-color: #f5f5f5;
}

.list-group {
  margin-bottom: 0px;
  padding: 10px;

  a.list-group-item {
  	border: 0;
    padding: 5px 5px;
    margin-bottom: 2px;
    color: $link-color;

    .badge {
    	background-color: #0574DE;
      border-radius: 1em;
    }
  }
}</css>
        <data_table>sp_instance</data_table>
        <demo_data>{"options" :&#13;
   {&#13;
      "hide_xs" : false&#13;
   }&#13;
}</demo_data>
        <description/>
        <docs/>
        <field_list>color</field_list>
        <has_preview>true</has_preview>
        <id>ucsb-sc-categories</id>
        <internal>false</internal>
        <link/>
        <name>UCSB SC Categories</name>
        <option_schema>[{"name":"hide_xs","default_value":false,"label":"Hide at XS","type":"boolean"},{"name":"omit_badges","label":"Omit badges","type":"boolean"},{"name":"check_can_view","default_value":"true","label":"Check canView per item (may impact performance for large catalogs)","type":"boolean"},{"hint":"Choose between a flattened and a nested category structure","name":"category_layout","label":"Category Layout","type":"choice","choices":[{"label":"Flat","value":"Flat"},{"label":"Nested","value":"Nested"}]},{"displayValue":"Page","name":"page","label":"page","type":"reference","value":"sp_page","ed":{"reference":"sp_page"}}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	options.title = options.title || "SC Categories";
	options.category_layout = options.category_layout || "Nested";
	options.omit_badges = options.omit_badges == "true" || options.omit_badges == true;
	options.hide_xs = options.hide_xs == "true" || options.hide_xs == true;

	// set the page that will be displayed when clicking a category node
	if (options.page) {
		var pageGR = new GlideRecord("sp_page");
		options.page = (pageGR.get(options.page) ? pageGR.getValue("id") : null);
	} else
		options.page = $sp.getDisplayValue("sc_category_page") || 'sc_category';

	// set the catalog
	data.sc_catalog = $sp.getValue('sc_catalog');

	// If the selected category is a subcategory, we need to open all it's parent categories
	if (input && input.action === "retrieve_parent_hierarchy") {
		data.categories = input.categories;
		if(!input.cur_category_id)
			return;
		
		var categoryJS = new sn_sc.CatCategory(input.cur_category_id);
		if (!categoryJS)
			return;
		
		var parentArr;
		if (options.category_layout !== "Nested")
			parentArr = data.categories;
		else
			parentArr = 
				(categoryJS.getParent() ? openParent(categoryJS.getParent(), false) : openParent(input.cur_category_id, true));

		var selectedCategoryItem = findElementBySysID(parentArr, input.cur_category_id);
		if (selectedCategoryItem)
			selectedCategoryItem.selected = true;
	}
	else {
		data.categories = [];
		data.selected_category_id = $sp.getParameter("sys_id");
	}
})();

function openParent(cat_id, setSelected) {
	var catItem;
	var categoryJS = new sn_sc.CatCategory(cat_id);
	if (!cat_id || !categoryJS)
		return;
	if (!categoryJS.getParent())
		catItem = findElementBySysID(data.categories, cat_id);
	else {
		var parentCategoryArr = openParent(categoryJS.getParent());
		catItem = findElementBySysID(parentCategoryArr, cat_id);
	}
	if (!catItem)
		return [];
	var subcategoryArr = buildSubcategoryArr(catItem.sys_id);
	catItem.subcategories = retrieveCategoriesFromArr(subcategoryArr);
	catItem.showSubcategories = true;
	
	if (setSelected)
		catItem.selected = true;
	
	return catItem.subcategories;
}

function findElementBySysID(arr, id) {
	var foundElements = arr.filter(function(item) {
		return item.sys_id === id;
	});

	return (foundElements.length > 0) ? foundElements[0] : null;
}

function retrieveCategoriesFromArr(arr) {
	var categories = [];
	for (var i = 0; i < arr.length; i++) {
		var cat = retrieveCategoryFromArr(arr[i].sys_id);
		if (cat)
			categories.push(cat);
	}
	return categories;
}

function retrieveCategoryFromArr(cat_id) {
	var categoryJS = new sn_sc.CatCategory(cat_id);
	if (!categoryJS || !categoryJS.canView())
		return null;
	var item_count = 0;
	if (options.check_can_view != true && options.check_can_view != "true")
		item_count = categoryJS.getItemsCount();
	else if (options.check_can_view == true || options.check_can_view == "true")
		item_count = categoryJS.getViewableItemsCount();

	if (item_count) {
		var cat = {};
		cat.title = categoryJS.getTitle();
		cat.sys_id = cat_id;
		cat.count = item_count;
		cat.parent = categoryJS.getParent();
		if (options.category_layout === "Nested")
			cat.isParentCategory = categoryJS.getViewableSubCategories().length > 0;
		return cat;
	}

	return null;
}

function buildSubcategoryArr(parentID) {
	var categoryJS = new sn_sc.CatCategory(parentID);
	return categoryJS.getViewableSubCategories();
}]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-02-23 23:50:34</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>b6ec82500fe013003fd44cace1050e1b</sys_id>
        <sys_mod_count>90</sys_mod_count>
        <sys_name>UCSB SC Categories</sys_name>
        <sys_package display_value="UCSB Service Portal" source="x_68580_ucsb_sp">44bb3f670f1013003fd44cace1050e00</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="UCSB Service Portal">44bb3f670f1013003fd44cace1050e00</sys_scope>
        <sys_update_name>sp_widget_b6ec82500fe013003fd44cace1050e1b</sys_update_name>
        <sys_updated_by>julio.valdez_admin</sys_updated_by>
        <sys_updated_on>2018-04-05 22:57:26</sys_updated_on>
        <template><![CDATA[<div ng-class="::{'hidden-xs' : options.hide_xs}" class="panel panel-{{::options.color}} b">
  <div class="panel-heading">
    <h1 class="h4 panel-title">
      <span ng-if="::options.glyph">
        <fa name="{{::options.glyph}}" />
      </span>
      {{::options.title}}
    </h1>
  </div>
  <div class="list-group no-radius alt" role="list">
    <sp-category-list-item-ucsb 
    	ng-repeat="cat in data.categories"
      ng-if="options.category_layout == 'Flat' && cat.count > 0 || options.category_layout == 'Nested'"
      category="cat"
      omit-badges="options.omit_badges"
      page="options.page"
      level="0"
    />
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
