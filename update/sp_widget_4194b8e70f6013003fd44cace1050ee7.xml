<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function(spUtil, $scope, $rootScope, $window) {
	/* widget controller */
	var c = this;

	//Initialize the filter for the record watcher
	c.watchFilter = "workflow_state=published";
	spUtil.recordWatch($scope, "kb_knowledge", c.watchFilter, function(name, data) { 
		c.data.action = "new_announcement";
		c.server.update().then(function(response) {
			$rootScope.$broadcast('sp.announcement.inserted'); //notify all other announcement widgets
		});
		
	});

	c.closeAnnouncements = function() {
		c.data.showAnnouncements = false;

		c.data.closeAnnouncementArr = [].concat(c.data.informationAnnouncements, c.data.outages);		
		c.data.action = "close_announcements";
		c.server.update();		
	};

	c.openAnnouncements = function() {
		$window.location.href = "?id=ucsb_announcement_overview";
	};
}]]></client_script>
        <controller_as>c</controller_as>
        <css>/* Announcement Header */

.announcement-container {
  font-family: "Open Sans", Arial, sans-serif;

  h3 {
    padding-top:0px;
    margin-top:5px;
    margin-bottom:0;
    font-size:18px;
    line-height:27px;

  }
  p {
    font-size:1em;
    line-height:13px;
  }
  .panel {
    border-radius:0;
    margin-bottom:0;
  }
  .panel-body {
    padding:2px;
  }
  small {
    font-size:100%;
  }
}

.announcement-container {
  padding:0 0 0 0;
}

.announcement-info {
  background-color: $brand-info;
  color: #fff;

  h3 {
    color:$primary-color;
    font-weight:bold;
  }
  .announcement-category {
    border:0px solid $primary-color;
  }
  .information-icon {
    color:$primary-color;
  }
  small {
    color:$primary-color;
  }
  p {
    color:$primary-color;
  }
  .btn {
    background-color:$brand-primary;
    color:#fff;
    border:0;
    &amp;:hover {
      border:1px solid #eee;
      color:#eee;
    }
  }
}

.announcement-warning {
  $primary-color: #555;
  background-color: $brand-warning;
  color: #fff;
  h3 {
    color:$primary-color;
    font-weight:bold;
  }
  .announcement-category {
    border:0px solid $primary-color;
  }
  .information-icon {
    color:$primary-color;
  }
  small {
    color:$primary-color;
  }
  p {
    color:$primary-color;
  }
  .btn {
    background-color:$brand-primary;
    color:#fff;
    border:0;
    &amp;:hover {
      border:1px solid #eee;
      color:#eee;
    }
  }
}

.announcement-danger {
  $primary-color: #dee5e7;
  background-color: $brand-danger;
  color: #fff;
  h3 {
    color: #fff;
    font-weight:bold;
  }
  .announcement-category {
    border:0px solid $primary-color;
  }
  .information-icon {
    color: #fff;
  }
  small {
    color: #fff;
  }
  p {
    color: #fff;
  }
  .btn {
    background-color:$brand-primary;
    color:#fff;
    border:0;
    &amp;:hover {
      border:1px solid #eee;
      color:#eee;
    }
  }
}

.announcement-success {
  $primary-color: #fff;
  background-color: $brand-success;
  color: #fff;

  h3 {
    color:$primary-color;
    font-weight:bold;
  }
  .announcement-category {
    border:0px solid $primary-color;
  }
  .information-icon {
    color:$primary-color;
  }
  small {
    color:$primary-color;
  }
  p {
    color:$primary-color;
  }
  .btn {
    background-color:$brand-primary;
    color:#fff;
    border:0;
    &amp;:hover {
      border:1px solid #eee;
      color:#eee;
    }
  }
}

.announcement-category {
  font-size: 1.3em;
  font-weight: 100;
  padding:1%;
  text-align:left;
}

.announcement-published {
  font-size:12px;
  font-weight:normal;
  vertical-align:bottom;
  margin-top:3px;
}

.announcement-text {
  padding-left:40px;
}

.announcement-button {
  padding-left: 25px;
  padding-bottom: 10px;
  padding-top: 10px;
}

.close {
  opacity: inherit;
  color: #fff;
  padding-top:8px;
  padding-bottom:4px;
  padding-left:10px;
  font-size:1em;
  font-weight:100;
  &amp;:hover {
    border-bottom:2px solid #fff;
  }
}

@media (max-width: 768px) {
  .cta {
    padding-bottom:10px;
  }
  .information-icon, .announcement-published {
    padding-left:4px;
  }
  .announcement-category {
    padding-left:12px;
  }
  .announcement-text {
    padding-left:15px;
  }
}

.cta .dismiss {
  margin-top:5%;
}

.close i {
  font-size:1.3em;
  font-weight:normal;
}

.information-icon {
  line-height:1em;
}


/*!
* bootstrap-notifications v0.9.0 (https://skywalkapps.github.io/bootstrap-notifications)
* Copyright 2016 Martin StanÄ›k
* Licensed under MIT
*/
.dropdown-container {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: 1000;
  display: none;
  float: left;
  min-width: 200px;
  max-width: 330px;
  margin: 2px 0 0;
  list-style: none;
  font-size: 14px;
  background-color: #fff;
  border: 1px solid #ccc;
  border: 1px solid rgba(0, 0, 0, 0.15);
  border-radius: 4px;
  -webkit-box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);
  background-clip: padding-box;
}
.dropdown-container &gt; .dropdown-menu {
  position: static;
  z-index: 1000;
  float: none!important;
  padding: 10px 0;
  margin: 0;
  border: 0;
  background: transparent;
  border-radius: 0;
  -webkit-box-shadow: none;
  box-shadow: none;
  max-height: 330px;
  overflow-y: auto;
}
.dropdown-container &gt; .dropdown-menu + .dropdown-menu {
  padding-top: 0;
}
.dropdown-menu &gt; li &gt; a {
  overflow: hidden;
  white-space: nowrap;
  word-wrap: normal;
  text-decoration: none;
  text-overflow: ellipsis;
  -o-text-overflow: ellipsis;
  -webkit-transition: none;
  -o-transition: none;
  transition: none;
}
.dropdown-toggle {
  cursor: pointer;
}
.dropdown-header {
  white-space: nowrap;
}
.open &gt; .dropdown-container &gt; .dropdown-menu,
.open &gt; .dropdown-container {
  display: block;
}
.dropdown-toolbar {
  padding-top: 6px;
  padding-left: 20px;
  padding-right: 20px;
  padding-bottom: 5px;
  background-color: #fff;
  border-bottom: 1px solid rgba(0, 0, 0, 0.15);
  border-radius: 4px 4px 0 0;
}
.dropdown-toolbar &gt; .form-group {
  margin: 5px -10px;
}
.dropdown-toolbar .dropdown-toolbar-actions {
  float: right;
}
.dropdown-toolbar .dropdown-toolbar-title {
  margin: 0;
  font-size: 14px;
}
.dropdown-footer {
  padding: 5px 20px;
  border-top: 1px solid #ccc;
  border-top: 1px solid rgba(0, 0, 0, 0.15);
  border-radius: 0 0 4px 4px;
}
.anchor-block small {
  display: none;
}
@media (min-width: 992px) {
  .anchor-block small {
    display: block;
    font-weight: normal;
    color: #777777;
  }
  .dropdown-menu &gt; li &gt; a.anchor-block {
    padding-top: 6px;
    padding-bottom: 6px;
  }
}
@media (min-width: 992px) {
  .dropdown.hoverable:hover &gt; ul {
    display: block;
  }
}
.dropdown-position-topright {
  top: auto;
  right: 0;
  bottom: 100%;
  left: auto;
  margin-bottom: 2px;
}
.dropdown-position-topleft {
  top: auto;
  right: auto;
  bottom: 100%;
  left: 0;
  margin-bottom: 2px;
}
.dropdown-position-bottomright {
  right: 0;
  left: auto;
}
.dropmenu-item-label {
  white-space: nowrap;
}
.dropmenu-item-content {
  position: absolute;
  text-align: right;
  max-width: 60px;
  right: 20px;
  color: #777777;
  overflow: hidden;
  white-space: nowrap;
  word-wrap: normal;
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
}
small.dropmenu-item-content {
  line-height: 20px;
}
.dropdown-menu &gt; li &gt; a.dropmenu-item {
  position: relative;
  padding-right: 66px;
}
.dropdown-submenu .dropmenu-item-content {
  right: 40px;
}
.dropdown-menu &gt; li.dropdown-submenu &gt; a.dropmenu-item {
  padding-right: 86px;
}
.dropdown-inverse .dropdown-menu {
  background-color: rgba(0, 0, 0, 0.8);
  border: 1px solid rgba(0, 0, 0, 0.9);
}
.dropdown-inverse .dropdown-menu .divider {
  height: 1px;
  margin: 9px 0;
  overflow: hidden;
  background-color: #2b2b2b;
}
.dropdown-inverse .dropdown-menu &gt; li &gt; a {
  color: #cccccc;
}
.dropdown-inverse .dropdown-menu &gt; li &gt; a:hover,
.dropdown-inverse .dropdown-menu &gt; li &gt; a:focus {
  color: #fff;
  background-color: #262626;
}
.dropdown-inverse .dropdown-menu &gt; .active &gt; a,
.dropdown-inverse .dropdown-menu &gt; .active &gt; a:hover,
.dropdown-inverse .dropdown-menu &gt; .active &gt; a:focus {
  color: #fff;
  background-color: #337ab7;
}
.dropdown-inverse .dropdown-menu &gt; .disabled &gt; a,
.dropdown-inverse .dropdown-menu &gt; .disabled &gt; a:hover,
.dropdown-inverse .dropdown-menu &gt; .disabled &gt; a:focus {
  color: #777777;
}
.dropdown-inverse .dropdown-header {
  color: #777777;
}
.table &gt; thead &gt; tr &gt; th.col-actions {
  padding-top: 0;
  padding-bottom: 0;
}
.table &gt; thead &gt; tr &gt; th.col-actions .dropdown-toggle {
  color: #777777;
}
.notifications {
  list-style: none;
  padding: 0;
}
.notification {
  display: block;
  padding: 9.6px 12px;
  border-bottom: 1px solid #eeeeee;
  color: #333333;
  text-decoration: none;
}
.notification:last-child {
  border-bottom: 0;
}

.notification-title {
  font-size: 15px;
  margin-bottom: 0;
}
.notification-desc {
  margin-bottom: 0;
}
.notification-meta {
  color: #777777;
}
a.notification:hover {
  text-decoration: none;
}
.dropdown-notifications &gt; .dropdown-container,
.dropdown-notifications &gt; .dropdown-menu {
  width: 450px;
  max-width: 450px;
}
.dropdown-notifications .dropdown-menu {
  padding: 0;
}
.dropdown-notifications .dropdown-toolbar,
.dropdown-notifications .dropdown-footer {
  padding: 9.6px 12px;
}
.dropdown-notifications .dropdown-toolbar {
  background: #fff;
}
.dropdown-notifications .dropdown-footer {
  background: #eeeeee;
}
.notification-icon {
  margin-right: 6.8775px;
}
.notification-icon:after {
  position: absolute;
  content: attr(data-count);
  margin-left: -6.8775px;
  margin-top: -6.8775px;
  padding: 0 4px;
  min-width: 13.755px;
  height: 13.755px;
  line-height: 13.755px;
  background: red;
  border-radius: 10px;
  color: #fff;
  text-align: center;
  vertical-align: middle;
  font-size: 11.004px;
  font-weight: 600;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
}

.btn-lg .notification-icon:after {
  margin-left: -8.253px;
  margin-top: -8.253px;
  min-width: 16.506px;
  height: 16.506px;
  line-height: 16.506px;
  font-size: 13.755px;
}
.btn-xs .notification-icon:after {
  content: '';
  margin-left: -4.1265px;
  margin-top: -2.06325px;
  min-width: 6.25227273px;
  height: 6.25227273px;
  line-height: 6.25227273px;
  padding: 0;
}
.btn-xs .notification-icon {
  margin-right: 3.43875px;
}
</css>
        <data_table>u_sp_announcement_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>u_background_color,u_text_color,u_more_text_color,u_information_glyph,u_outage_glyph</field_list>
        <has_preview>true</has_preview>
        <id>ucsb-announcements-header-banner</id>
        <internal>false</internal>
        <link/>
        <name>UCSB Announcements for Header</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */

	if(!input) {
		/* Retrieve all available announcements */
		getAnnouncements();
	}

	/* When the user dismisses the announcements, insert a "viewed" record so they don't appear next time */
	if(input && input.action == "close_announcements") {		
		var closeAnnouncementArr = input.closeAnnouncementArr;
		return null;
	}

	/* When record watch detects a new announcement, we will update the data object with the new announcement */
	if(input && input.action == "new_announcement") {		
		getAnnouncements();
	}

	function getAnnouncements() {
		data.showAnnouncements = true;

		//Information Alert Handling
		var grAnnouncement = new GlideRecord("kb_knowledge");
		grAnnouncement.addActiveQuery();
		grAnnouncement.addEncodedQuery("workflow_state=published^topic=News");
		grAnnouncement.orderByDesc("published");
		grAnnouncement.query();

		data.informationAnnouncements = [];
		data.informationAnnouncementIDs = "";
		data.outages = [];
		data.outageIDs = "";

		while (grAnnouncement.next()) {
			if(grAnnouncement.getDisplayValue("kb_category") == "Alerts") {
				pushInformationAnnouncement(grAnnouncement);
			} else {
				pushOutageAnnouncement(grAnnouncement);
			}
		}
	}

	function pushInformationAnnouncement(announcementRecord) {
		var announcement = {};
		$sp.getRecordDisplayValues(announcement, announcementRecord, "text, short_description");
		$sp.getRecordValues(announcement, announcementRecord, "published,sys_id"); //,u_class,u_more_info_link,u_more_info_button_text
		data.informationAnnouncements.push(announcement);
		data.informationAnnouncementIDs += "," + announcementRecord.getUniqueValue();
	}

	function pushOutageAnnouncement(announcementRecord) {
		//Outage Handling
		var outage = {};

		$sp.getRecordDisplayValues(outage, announcementRecord, "published, text, short_description"); //u_outage.type,u_outage.cmdb_ci, u_outage.begin, 
		$sp.getRecordValues(outage, announcementRecord, "sys_id"); //u_details_url,u_class,u_more_info_link,u_more_info_button_text,u_class,u_more_info_link,u_more_info_button_text

		outage.announcement_id = announcementRecord.getUniqueValue();
		data.outages.push(outage);
		data.outageIDs += "," + announcementRecord.getValue("u_outage");
	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-03-05 19:44:51</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>4194b8e70f6013003fd44cace1050ee7</sys_id>
        <sys_mod_count>36</sys_mod_count>
        <sys_name>UCSB Announcements for Header</sys_name>
        <sys_package display_value="UCSB Service Portal" source="x_68580_ucsb_sp">44bb3f670f1013003fd44cace1050e00</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="UCSB Service Portal">44bb3f670f1013003fd44cace1050e00</sys_scope>
        <sys_update_name>sp_widget_4194b8e70f6013003fd44cace1050ee7</sys_update_name>
        <sys_updated_by>julio.valdez_admin</sys_updated_by>
        <sys_updated_on>2018-04-13 00:18:37</sys_updated_on>
        <template><![CDATA[<div class="container-fluid announcement-container" ng-if="c.data.showAnnouncements && (c.data.informationAnnouncements.length > 0 || c.data.outages.length > 0)">
  <!-- Information -->
  <div ng-show="c.data.informationAnnouncements.length > 0 && c.data.showAnnouncements">
    <div ng-repeat="announcement in data.informationAnnouncements | limitTo: 1" class="panel panel-info announcement-info">
      <div class="container panel-body">
        <div class="col-xs-12 col-sm-3 col-md-2 announcement-category">
          <div class="information-icon">
            <i class="fa fa-{{c.options.u_information_glyph || 'info-circle'}}" aria-hidden="true"></i> {{c.options.u_information_text || "Current Information"}} 
          </div>
          <div class="announcement-published">
            <small>${Published:}</small>
            <small>{{announcement.published}}</small>
          </div>
        </div> 
        <div class="col-xs-12 col-sm-6 col-md-7 announcement-text">
          <h3>{{announcement.short_description}}</h3>
          <p class="notification-desc" ng-bind-html="announcement.text"></p>
        </div>
        <div class="col-xs-12 col-sm-3 col-md-3 cta">
          <div class="dismiss row">
            <div class="col-xs-6">
              <a ng-if="announcement.u_more_info_link && announcement.u_more_info_button_text" href="{{announcement.u_more_info_link}}" class="btn btn-md active" role="button" aria-pressed="true">{{announcement.u_more_info_button_text}}</a>
            <a ng-if="!announcement.u_more_info_link || !announcement.u_more_info_button_text" href="?id=ucsb_announcement_article&sys_id={{announcement.sys_id}}" class="btn btn-md active" role="button" aria-pressed="true">${Read More}</a>
            </div>
            <div class="col-xs-6">
              <button type="button" class="close" aria-label="Close" ng-click="c.closeAnnouncements()">
                <span aria-hidden="true">
                  ${Dismiss} <i class="fa fa-close" />
                </span>
              </button>
            </div> 
          </div>
        </div>
      </div>          
    </div>  
  </div>	


  <!-- Outages -->
  <div ng-show="c.data.outages.length > 0 && c.data.showAnnouncements">
    <div ng-repeat="outage in data.outages | limitTo: 1" class="panel panel-danger announcement-danger">
      <div class="container panel-body">
        <div class="col-xs-12 col-sm-3 col-md-2 announcement-category">
          <div class="information-icon">
            <i class="fa fa-{{c.options.u_outage_glyph || 'exclamation-triangle'}}" aria-hidden="true"></i> {{c.options.u_outage_text || "Service Interruptions"}} 
          </div>
          <div class="announcement-published">
            <small>${Published:}</small>
            <small>{{outage.published}}</small>
          </div>
        </div> 
        <div ng-if="outage.short_description" class="col-xs-12 col-sm-6 col-md-7 announcement-text">
          <h3>{{outage.short_description}}</h3>
          <p class="notification-desc" ng-bind-html="outage.text"></p>
        </div>
        <div class="col-xs-12 col-sm-3 col-md-3 cta">
          <div class="dismiss">
            <a ng-if="outage.u_more_info_link && outage.u_more_info_button_text" href="{{outage.u_more_info_link}}" class="btn btn-md active" role="button" aria-pressed="true">{{outage.u_more_info_button_text}}</a>
            <a ng-if="!outage.u_more_info_link || !outage.u_more_info_button_text" ng-href="?id=ucsb_announcement_article&sys_id={{outage.sys_id}}" class="btn btn-md active" role="button" aria-pressed="true">${Outage Info}</a>
          </div>
        </div>
      </div>          
    </div>  
  </div>
  <div class="container announcement-content announcement-button" ng-if="data.outages.length > 1 || data.informationAnnouncements.length > 1">
    <button class="btn btn-xs btn-primary" type="button" ng-click="c.openAnnouncements()">
      <i class="fa fa-list-alt"></i> ${View all announcements}
    </button>
  </div>
</div>
]]></template>
    </sp_widget>
</record_update>
